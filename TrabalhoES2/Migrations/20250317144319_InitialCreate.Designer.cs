// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrabalhoES2.Models;

#nullable disable

namespace TrabalhoES2.Migrations
{
    [DbContext(typeof(projetoPraticoDbContext))]
    [Migration("20250317144319_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "tipoativofinanceiro", new[] { "DepositoPrazo", "ImovelArrendado", "FundoInvestimento" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "tipoutilizador", new[] { "Cliente", "Admin", "UserManager" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrabalhoES2.Models.Ativofinanceiro", b =>
                {
                    b.Property<int>("AtivofinanceiroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ativofinanceiro_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AtivofinanceiroId"));

                    b.Property<int>("CarteiraId")
                        .HasColumnType("integer")
                        .HasColumnName("carteira_id");

                    b.Property<DateOnly?>("Datainicio")
                        .HasColumnType("date")
                        .HasColumnName("datainicio");

                    b.Property<int?>("Duracaomeses")
                        .HasColumnType("integer")
                        .HasColumnName("duracaomeses");

                    b.Property<decimal?>("Percimposto")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("percimposto");

                    b.HasKey("AtivofinanceiroId")
                        .HasName("ativofinanceiro_pkey");

                    b.HasIndex("CarteiraId");

                    b.ToTable("ativofinanceiro", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Banco", b =>
                {
                    b.Property<int>("BancoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("banco_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BancoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("BancoId")
                        .HasName("banco_pkey");

                    b.ToTable("banco", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Carteira", b =>
                {
                    b.Property<int>("CarteiraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("carteira_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarteiraId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    b.HasKey("CarteiraId")
                        .HasName("carteira_pkey");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("carteira", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Depositoprazo", b =>
                {
                    b.Property<int>("DepositoprazoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("depositoprazo_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepositoprazoId"));

                    b.Property<int>("AtivofinanceiroId")
                        .HasColumnType("integer")
                        .HasColumnName("ativofinanceiro_id");

                    b.Property<int>("BancoId")
                        .HasColumnType("integer")
                        .HasColumnName("banco_id");

                    b.Property<string>("Nrconta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nrconta");

                    b.Property<decimal>("Taxajuroanual")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("taxajuroanual");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titular");

                    b.Property<decimal>("Valoratual")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valoratual");

                    b.Property<decimal>("Valorinicial")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valorinicial");

                    b.HasKey("DepositoprazoId")
                        .HasName("depositoprazo_pkey");

                    b.HasIndex("BancoId");

                    b.HasIndex(new[] { "AtivofinanceiroId" }, "depositoprazo_ativofinanceiro_id_key")
                        .IsUnique();

                    b.ToTable("depositoprazo", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Fundoinvestimento", b =>
                {
                    b.Property<int>("FundoinvestimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fundoinvestimento_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FundoinvestimentoId"));

                    b.Property<int>("AtivofinanceiroId")
                        .HasColumnType("integer")
                        .HasColumnName("ativofinanceiro_id");

                    b.Property<int>("BancoId")
                        .HasColumnType("integer")
                        .HasColumnName("banco_id");

                    b.Property<decimal>("Montanteinvestido")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("montanteinvestido");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<decimal>("Taxajuropdefeito")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("taxajuropdefeito");

                    b.HasKey("FundoinvestimentoId")
                        .HasName("fundoinvestimento_pkey");

                    b.HasIndex("BancoId");

                    b.HasIndex(new[] { "AtivofinanceiroId" }, "fundoinvestimento_ativofinanceiro_id_key")
                        .IsUnique();

                    b.ToTable("fundoinvestimento", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Imovelarrendado", b =>
                {
                    b.Property<int>("ImovelarrendadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("imovelarrendado_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ImovelarrendadoId"));

                    b.Property<int>("AtivofinanceiroId")
                        .HasColumnType("integer")
                        .HasColumnName("ativofinanceiro_id");

                    b.Property<int>("BancoId")
                        .HasColumnType("integer")
                        .HasColumnName("banco_id");

                    b.Property<string>("Designacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("designacao");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("localizacao");

                    b.Property<decimal>("Valoranualdespesas")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valoranualdespesas");

                    b.Property<decimal>("Valorimovel")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valorimovel");

                    b.Property<decimal>("Valormensalcondo")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valormensalcondo");

                    b.Property<decimal>("Valorrenda")
                        .HasPrecision(15, 2)
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("valorrenda");

                    b.HasKey("ImovelarrendadoId")
                        .HasName("imovelarrendado_pkey");

                    b.HasIndex(new[] { "AtivofinanceiroId" }, "imovelarrendado_ativofinanceiro_id_key")
                        .IsUnique();

                    b.HasIndex(new[] { "BancoId" }, "imovelarrendado_banco_id_key")
                        .IsUnique();

                    b.ToTable("imovelarrendado", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("utilizador_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UtilizadorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("UtilizadorId")
                        .HasName("utilizador_pkey");

                    b.HasIndex(new[] { "Email" }, "utilizador_email_key")
                        .IsUnique();

                    b.ToTable("utilizador", (string)null);
                });

            modelBuilder.Entity("TrabalhoES2.Models.Ativofinanceiro", b =>
                {
                    b.HasOne("TrabalhoES2.Models.Carteira", "Carteira")
                        .WithMany("Ativofinanceiros")
                        .HasForeignKey("CarteiraId")
                        .IsRequired()
                        .HasConstraintName("ativofinanceiro_carteira_id_fkey");

                    b.Navigation("Carteira");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Carteira", b =>
                {
                    b.HasOne("TrabalhoES2.Models.Utilizador", "Utilizador")
                        .WithMany("Carteiras")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("carteira_utilizador_id_fkey");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Depositoprazo", b =>
                {
                    b.HasOne("TrabalhoES2.Models.Ativofinanceiro", "Ativofinanceiro")
                        .WithOne("Depositoprazo")
                        .HasForeignKey("TrabalhoES2.Models.Depositoprazo", "AtivofinanceiroId")
                        .IsRequired()
                        .HasConstraintName("depositoprazo_ativofinanceiro_id_fkey");

                    b.HasOne("TrabalhoES2.Models.Banco", "Banco")
                        .WithMany("Depositoprazos")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("depositoprazo_banco_id_fkey");

                    b.Navigation("Ativofinanceiro");

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Fundoinvestimento", b =>
                {
                    b.HasOne("TrabalhoES2.Models.Ativofinanceiro", "Ativofinanceiro")
                        .WithOne("Fundoinvestimento")
                        .HasForeignKey("TrabalhoES2.Models.Fundoinvestimento", "AtivofinanceiroId")
                        .IsRequired()
                        .HasConstraintName("fundoinvestimento_ativofinanceiro_id_fkey");

                    b.HasOne("TrabalhoES2.Models.Banco", "Banco")
                        .WithMany("Fundoinvestimentos")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fundoinvestimento_banco_id_fkey");

                    b.Navigation("Ativofinanceiro");

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Imovelarrendado", b =>
                {
                    b.HasOne("TrabalhoES2.Models.Ativofinanceiro", "Ativofinanceiro")
                        .WithOne("Imovelarrendado")
                        .HasForeignKey("TrabalhoES2.Models.Imovelarrendado", "AtivofinanceiroId")
                        .IsRequired()
                        .HasConstraintName("imovelarrendado_ativofinanceiro_id_fkey");

                    b.HasOne("TrabalhoES2.Models.Banco", "Banco")
                        .WithOne("Imovelarrendado")
                        .HasForeignKey("TrabalhoES2.Models.Imovelarrendado", "BancoId")
                        .IsRequired()
                        .HasConstraintName("imovelarrendado_banco_id_fkey");

                    b.Navigation("Ativofinanceiro");

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Ativofinanceiro", b =>
                {
                    b.Navigation("Depositoprazo");

                    b.Navigation("Fundoinvestimento");

                    b.Navigation("Imovelarrendado");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Banco", b =>
                {
                    b.Navigation("Depositoprazos");

                    b.Navigation("Fundoinvestimentos");

                    b.Navigation("Imovelarrendado");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Carteira", b =>
                {
                    b.Navigation("Ativofinanceiros");
                });

            modelBuilder.Entity("TrabalhoES2.Models.Utilizador", b =>
                {
                    b.Navigation("Carteiras");
                });
#pragma warning restore 612, 618
        }
    }
}
