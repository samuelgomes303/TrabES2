@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TrabalhoES2.Services
@model TrabalhoES2.Models.Carteira

@{
ViewData["Title"] = "Minha Carteira";
}

<h1>@ViewData["Title"]</h1>

@if (TempData["Mensagem"] != null)
{
<div class="alert alert-info">@TempData["Mensagem"]</div>
}

<div class="mb-4">
    <a asp-action="SelecionarRelatorio" asp-controller="Carteira" asp-route-id="@Model.CarteiraId" class="btn btn-info">
        Gerar Relatório2
    </a>
</div>

<div class="mb-4">
    <a asp-action="AtivosCatalogo" class="btn btn-primary">Ver Ativos Disponíveis</a>
</div>

<!-- Formulário de relatório -->
<form asp-action="GerarRelatorio" asp-controller="Carteira" method="get" class="mb-4">
    <input type="hidden" name="id" value="@Model.CarteiraId" />
    <div class="form-group row">
        <div class="col-md-3">
            <label for="dataInicio">Data Início</label>
            <input type="date" class="form-control" id="dataInicio" name="dataInicio" required />
        </div>
        <div class="col-md-3">
            <label for="dataFim">Data Fim</label>
            <input type="date" class="form-control" id="dataFim" name="dataFim" required />
        </div>
        <div class="col-md-3 align-self-end">
            <button type="submit" class="btn btn-primary mt-2">Gerar Relatório</button>
        </div>
    </div>
</form>

@if (Model.Ativofinanceiros.Count == 0)
{
<div class="alert alert-info">
    Você ainda não tem ativos na sua carteira. Clique em "Ver Ativos Disponíveis" para adicionar.
</div>
}
else
{
<!-- Filtros -->
<form asp-action="Index" method="get" class="mb-4">
    <div class="form-row row">
        <div class="col-md-4 mb-2">
            <select name="bancoId" class="form-control">
                <option value="">Todos os Bancos</option>
                @foreach (var banco in (List<TrabalhoES2.Models.Banco>)ViewBag.Bancos)
                {
                <option value="@banco.BancoId" selected="@(ViewData["bancoId"]?.ToString() == banco.BancoId.ToString() ? "selected" : null)">
                    @banco.Nome
                </option>
                }
            </select>
        </div>
        <div class="col-md-3 mb-2">
            @{
            var tipoSel = ViewData["tipo"] as string;
            }
            <select name="tipo" class="form-control">
                <option value="">Todos os tipos</option>

                @if (tipoSel == "DepositoPrazo")
                {
                <option value="DepositoPrazo" selected>Depósito a Prazo</option>
                }
                else
                {
                <option value="DepositoPrazo">Depósito a Prazo</option>
                }

                @if (tipoSel == "FundoInvestimento")
                {
                <option value="FundoInvestimento" selected>Fundo de Investimento</option>
                }
                else
                {
                <option value="FundoInvestimento">Fundo de Investimento</option>
                }

                @if (tipoSel == "ImovelArrendado")
                {
                <option value="ImovelArrendado" selected>Imóvel Arrendado</option>
                }
                else
                {
                <option value="ImovelArrendado">Imóvel Arrendado</option>
                }
            </select>


        </div>
        <div class="col-md-3 mb-2">
            <input type="number" step="0.01" name="montanteAplicado" class="form-control" placeholder="Montante aplicado mínimo" value="@(ViewData["montanteAplicado"] ?? "")" />
        </div>
        <div class="col-md-2 mb-2">
            <button type="submit" class="btn btn-primary btn-block">Filtrar</button>
            <a asp-action="Index" class="btn btn-secondary btn-block mt-1">Limpar</a>
        </div>
    </div>
</form>

@if (ViewBag.NoResults != null)
{
<div class="alert alert-warning">@ViewBag.NoResults</div>
}

<!-- Tabela de ativos -->
<div class="card mb-4">
    <div class="card-header"><h3>Seus Ativos</h3></div>
    <div class="card-body">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Designação</th>
                <th>Tipo</th>
                <th>Duração (meses)</th>
                <th>Data de Início</th>
                <th>Detalhes</th>
                <th>Valor Inicial</th>
                <th>Valor Atual</th>
                <th>Expectativa de Rendimento</th>
                <th>Ações</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var ativo in Model.Ativofinanceiros)
            {
            var fundo = ativo.Fundoinvestimento;
            var valorAtualComJuros = fundo != null ? FundoInvestimentoService.CalcularValorAtualComJuros(fundo, ativo) : 0m;

            <tr>
                <td>
                    @(ativo.Depositoprazo?.Titular ?? fundo?.Nome ?? ativo.Imovelarrendado?.Designacao ?? "Sem designação")
                </td>
                <td>
                    @(ativo.Depositoprazo != null ? "Depósito a Prazo" :
                    fundo != null ? "Fundo de Investimento" :
                    ativo.Imovelarrendado != null ? "Imóvel Arrendado" : "Desconhecido")
                </td>
                <td>@ativo.Duracaomeses meses</td>
                <td>@ativo.Datainicio?.ToString("dd/MM/yyyy")</td>
                <td>
                    @if (ativo.Depositoprazo != null)
                    {
                    <span>Taxa: @ativo.Depositoprazo.Taxajuroanual%<br />Banco: @ativo.Depositoprazo.Banco?.Nome</span>
                    }
                    else if (fundo != null)
                    {
                    <span>@fundo.Nome<br />Banco: @fundo.Banco?.Nome</span>
                    }
                    else if (ativo.Imovelarrendado != null)
                    {
                    <span>@ativo.Imovelarrendado.Designacao<br />Banco: @ativo.Imovelarrendado.Banco?.Nome</span>
                    }
                </td>
                <td>
                    @if (ativo.Depositoprazo != null)
                    {
                    @ativo.Depositoprazo.Valorinicial.ToString("C")
                    }
                    else if (fundo != null)
                    {
                    @fundo.Montanteinvestido.ToString("C")
                    }
                    else if (ativo.Imovelarrendado != null)
                    {
                    @ativo.Imovelarrendado.Valorimovel.ToString("C")
                    }
                </td>
                <td>
                    @if (fundo != null)
                    {
                    <div>
                        @valorAtualComJuros.ToString("C")
                        @if (fundo.Quantidade > 0)
                        {
                        var porUnidade = valorAtualComJuros / fundo.Quantidade;
                        <br /><small class="text-muted">(@porUnidade.ToString("C") por unidade)</small>
                        }
                    </div>
                    }
                    else if (ativo.Depositoprazo != null)
                    {
                    @ativo.Depositoprazo.Valoratual.ToString("C")
                    }
                    else if (ativo.Imovelarrendado != null)
                    {
                    @ativo.Imovelarrendado.Valorimovel.ToString("C")
                    }
                </td>
                <td>
                    @{
                    decimal expectativa = 0;
                    string periodo = "";

                    if (ativo.Depositoprazo != null)
                    {
                    var taxa = ativo.Depositoprazo.Taxajuroanual / 100m;
                    var anos = (int)Math.Ceiling((ativo.Duracaomeses ?? 0) / 12.0);
                    expectativa = ativo.Depositoprazo.Valoratual * (decimal)Math.Pow((double)(1 + taxa), anos) - ativo.Depositoprazo.Valoratual;
                    periodo = $"em {anos} {(anos == 1 ? "ano" : "anos")}";
                    }
                    else if (fundo != null)
                    {
                    var taxa = fundo.Taxajuropdefeito / 100m;
                    var anos = (int)Math.Ceiling((ativo.Duracaomeses ?? 0) / 12.0);
                    expectativa = valorAtualComJuros * (decimal)Math.Pow((double)(1 + taxa), anos) - valorAtualComJuros;
                    periodo = $"em {anos} {(anos == 1 ? "ano" : "anos")}";
                    }
                    else if (ativo.Imovelarrendado != null)
                    {
                    var receita = ativo.Imovelarrendado.Valorrenda * 12;
                    var custos = ativo.Imovelarrendado.Valormensalcondo * 12 + ativo.Imovelarrendado.Valoranualdespesas;
                    expectativa = receita - custos;
                    periodo = "por ano";
                    }
                    }

                    @if (expectativa > 0)
                    {
                    <span class="text-success">+@expectativa.ToString("C") @periodo</span>
                    }
                    else if (expectativa < 0)
                    {
                    <span class="text-danger">@expectativa.ToString("C") @periodo</span>
                    }
                    else
                    {
                    <span>Sem rendimento</span>
                    }
                </td>
                <td>
                    <a asp-action="Remover" asp-route-id="@ativo.AtivofinanceiroId" class="btn btn-danger btn-sm">Remover</a>
                </td>
            </tr>
            }
            </tbody>
        </table>
    </div>
</div>
}
