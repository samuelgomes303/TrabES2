@using Microsoft.AspNetCore.Mvc.TagHelpers
@model TrabalhoES2.Models.Utilizador

@{
    ViewData["Title"] = "Editar Utilizador";
}

@* — estilos isolados para a view de edição de utilizador *@
<style>
  .form-card {
    max-width: 700px;
    margin: 2rem auto;
    border-radius: 1rem;
    box-shadow: 0 4px 16px rgba(0,0,0,.05);
    overflow: hidden;
  }
  .form-card .card-header {
    background: linear-gradient(135deg, #17a2b8, #117a8b);
    color: #fff;
    font-size: 1.5rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: .5rem;
    padding: 1rem;
  }
  .status-card {
    margin-bottom: 1.5rem;
    border-radius: .5rem;
    box-shadow: 0 2px 8px rgba(0,0,0,.05);
  }
  .status-card .card-header {
    background: #ffc107;
    color: #212529;
    font-weight: 600;
  }
  .status-card .alert {
    margin: 0;
    border-radius: 0 0 .5rem .5rem;
  }
  .form-group label {
    font-weight: 600;
  }
  .form-control, .form-select {
    border-radius: .5rem;
  }
  .btn-group {
    display: flex;
    gap: .5rem;
    margin-top: 1.5rem;
  }
  .btn-primary, .btn-secondary {
    flex: 1;
  }
</style>

<div class="card form-card">
  <div class="card-header">
    <i class="fas fa-user-edit"></i> Editar Utilizador
  </div>
  <div class="card-body">
    @if (!string.IsNullOrEmpty(ViewBag.DebugMessage))
    {
      <div class="alert alert-warning">
        @ViewBag.DebugMessage
      </div>
    }

    <form asp-action="Edit" method="post" novalidate>
      <input type="hidden" name="Id" value="@Model.Id" />

      <div class="card status-card">
        <div class="card-header">
          Estado do Utilizador
        </div>
        <div class="card-body">
          @if (Model.IsBlocked)
          {
            <div class="alert alert-warning mb-0">
              <strong>Utilizador Bloqueado</strong><br />
              Bloqueado desde @Model.BlockedAt?.ToString("yyyy-MM-dd HH:mm")<br />
              <a asp-action="Unblock" asp-route-id="@Model.Id" class="btn btn-sm btn-success mt-2">
                <i class="fas fa-unlock-alt me-1"></i> Desbloquear
              </a>
            </div>
          }
          else if (Model.UnblockedAt.HasValue)
          {
            <div class="alert alert-success mb-0">
              <strong>Utilizador Ativo</strong><br />
              Desbloqueado em @Model.UnblockedAt?.ToString("yyyy-MM-dd HH:mm")<br />
              <a asp-action="Block" asp-route-id="@Model.Id" class="btn btn-sm btn-warning mt-2">
                <i class="fas fa-user-lock me-1"></i> Bloquear
              </a>
            </div>
          }
          else
          {
            <div class="alert alert-success mb-0">
              <strong>Utilizador Ativo</strong><br />
              <a asp-action="Block" asp-route-id="@Model.Id" class="btn btn-sm btn-warning mt-2">
                <i class="fas fa-user-lock me-1"></i> Bloquear
              </a>
            </div>
          }
        </div>
      </div>

      <div class="form-group mb-3">
        <label for="Nome">Nome</label>
        <input id="Nome" name="Nome" class="form-control" value="@Model.Nome" required />
        <span class="text-danger" id="Nome-error"></span>
      </div>

      <div class="form-group mb-3">
        <label for="Email">Email</label>
        <input id="Email" name="Email" type="email" class="form-control" value="@Model.Email" required />
        <span class="text-danger" id="Email-error"></span>
      </div>

      <div class="form-group mb-3">
        <label for="NewPassword">Nova Password <small class="text-muted">(deixe em branco para manter)</small></label>
        <input id="NewPassword" name="NewPassword" type="password" class="form-control" />
        <span class="text-danger" id="NewPassword-error"></span>
      </div>

      <div class="form-group mb-3">
        <label for="ConfirmNewPassword">Confirmar Nova Password</label>
        <input id="ConfirmNewPassword" name="ConfirmNewPassword" type="password" class="form-control" />
        <span class="text-danger" id="ConfirmNewPassword-error"></span>
      </div>

      @if (User.IsInRole("UserManager") && !User.IsInRole("Admin"))
      {
        <div class="form-group mb-3">
          <label>Tipo de Utilizador</label>
          <input type="text" class="form-control" value="@Model.TpUtilizador" disabled />
          <input type="hidden" name="TipoUtilizador" value="@Model.TpUtilizador" />
          <small class="form-text text-muted">UserManager não pode alterar o tipo.</small>
        </div>
      }
      else
      {
        <div class="form-group mb-3">
          <label for="TipoUtilizador">Tipo de Utilizador</label>
          <select id="TipoUtilizador" name="TipoUtilizador" class="form-select" required>
            @foreach (var tipo in Enum.GetValues(typeof(TrabalhoES2.Models.Utilizador.TipoUtilizador)))
            {
              if (tipo.ToString() == Model.TpUtilizador.ToString())
              {
                <option value="@tipo" selected="selected">
                  @tipo
                </option>
              }
              else
              {
                <option value="@tipo">
                  @tipo
                </option>
              }
            }
          </select>
          <span class="text-danger" id="TipoUtilizador-error"></span>
        </div>
      }

      <div class="btn-group">
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save me-1"></i> Guardar
        </button>
        <a asp-action="Index" class="btn btn-secondary">
          <i class="fas fa-arrow-left me-1"></i> Voltar à Lista
        </a>
      </div>
    </form>
  </div>
</div>
