@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<TrabalhoES2.Models.Utilizador>

@{
    ViewData["Title"] = "Gestão de Utilizadores";
}

<h1>Gestão de Utilizadores</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<p>
    <a asp-action="Create" class="btn btn-primary">Criar Novo Utilizador</a>
</p>

<div class="mb-3">
    <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" id="showDeleted" @(ViewBag.IncludeDeleted ? "checked" : "")>
        <label class="form-check-label" for="showDeleted">Mostrar utilizadores removidos</label>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Nome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TpUtilizador)
        </th>
        <th>Estado</th>
        <th>Ações</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr class="@(item.IsDeleted ? "table-danger" : item.IsBlocked ? "table-warning" : "")">
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TpUtilizador)
            </td>
            <td>
                @if (item.IsDeleted)
                {
                    <span class="badge bg-danger">Removido</span>
                    <small>(@item.DeletedAt?.ToString("yyyy-MM-dd HH:mm"))</small>
                }
                else if (item.IsBlocked)
                {
                    <span class="badge bg-warning text-dark">Bloqueado</span>
                    <small>(@item.BlockedAt?.ToString("yyyy-MM-dd HH:mm"))</small>
                }
                else
                {
                    <span class="badge bg-success">Ativo</span>
                    @if (item.UnblockedAt.HasValue)
                    {
                        <small>(Desbloqueado: @item.UnblockedAt?.ToString("yyyy-MM-dd HH:mm"))</small>
                    }
                }
            </td>
            <td>
                @if (item.IsDeleted)
                {
                    <span class="text-muted">Sem ações disponíveis</span>
                }
                else
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Editar</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Detalhes</a>

                    @if (item.IsBlocked)
                    {
                        <a asp-action="Unblock" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success">Desbloquear</a>
                    }
                    else
                    {
                        <a asp-action="Block" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning">Bloquear</a>
                    }

                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Remover</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <script>
        document.getElementById('showDeleted').addEventListener('change', function() {
            window.location.href = '/User/Index?includeDeleted=' + this.checked;
        });

        // Auto-close alerts after 5 seconds
        setTimeout(function() {
            $('.alert-success').alert('close');
        }, 5000);
    </script>
}