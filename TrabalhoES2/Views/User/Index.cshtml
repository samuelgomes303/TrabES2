@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<TrabalhoES2.Models.Utilizador>

@{
    var isManagerOnly = User.IsInRole("UserManager") && !User.IsInRole("Admin");
    ViewData["Title"] = isManagerOnly ? "Gestão de Clientes" : "Gestão de Utilizadores";
}

@* — estilos isolados para a página de listagem *@
<style>
  .page-header {
    margin-bottom: 1.5rem;
    color: #0052D4;
    text-shadow: 1px 1px 2px rgba(0,0,0,.1);
  }
  .alert-info {
    border-radius: .5rem;
    box-shadow: 0 2px 8px rgba(0,0,0,.05);
    padding: 1rem;
  }
  .actions-bar {
    display: flex;
    flex-wrap: wrap;
    gap: .75rem;
    margin-bottom: 1rem;
  }
  .table-card {
    border-radius: 1rem;
    box-shadow: 0 4px 16px rgba(0,0,0,.05);
    overflow: hidden;
  }
  .table-card .card-header {
    background: linear-gradient(135deg, #17a2b8, #117a8b);
    color: #fff;
    font-weight: 600;
    font-size: 1.25rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: .75rem 1rem;
  }
  .table-card .table {
    margin: 0;
  }
  .table-card .table-hover tbody tr:hover {
    background: rgba(23,162,184,.05);
  }
  .badge-status {
    font-size: .85rem;
    text-transform: uppercase;
    padding: .25rem .5rem;
  }
</style>

<h1 class="page-header">@ViewData["Title"]</h1>

@if (isManagerOnly)
{
  <div class="alert alert-info">
    <strong>UserManager:</strong> Pode criar e gerir apenas clientes. Bloquear/desbloquear mas não remover.
  </div>
}

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show" role="alert">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

<div class="actions-bar">
  <a asp-action="Create" class="btn btn-primary">
    <i class="fas fa-user-plus me-1"></i>
    @(isManagerOnly ? "Criar Novo Cliente" : "Criar Novo Utilizador")
  </a>
  @if (User.IsInRole("Admin"))
  {
    <div class="form-check form-switch align-items-center">
      <input class="form-check-input" type="checkbox" id="showDeleted" @(ViewBag.IncludeDeleted ? "checked" : "")>
      <label class="form-check-label ms-2" for="showDeleted">Mostrar removidos</label>
    </div>
  }
</div>

<div class="card table-card">
  <div class="card-header">
    Lista de @ViewData["Title"]
  </div>
  <div class="table-responsive">
    <table class="table table-striped table-hover mb-0">
      <thead class="table-light">
        <tr>
          <th>@Html.DisplayNameFor(m => m.Nome)</th>
          <th>@Html.DisplayNameFor(m => m.Email)</th>
          @if (User.IsInRole("Admin"))
          {
            <th>@Html.DisplayNameFor(m => m.TpUtilizador)</th>
          }
          <th>Estado</th>
          <th>Ações</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var item in Model)
        {
          var rowClass = item.IsDeleted ? "table-danger"
                       : item.IsBlocked ? "table-warning"
                       : "";
          <tr class="@rowClass">
            <td>@item.Nome</td>
            <td>@item.Email</td>
            @if (User.IsInRole("Admin"))
            {
              <td>@item.TpUtilizador</td>
            }
            <td>
              @if (item.IsDeleted)
              {
                <span class="badge-status bg-danger">Removido</span>
                <small class="text-muted">(@item.DeletedAt:yyyy-MM-dd HH:mm)</small>
              }
              else if (item.IsBlocked)
              {
                <span class="badge-status bg-warning text-dark">Bloqueado</span>
                <small class="text-muted">(@item.BlockedAt:yyyy-MM-dd HH:mm)</small>
              }
              else
              {
                <span class="badge-status bg-success text-white">Ativo</span>
                @if (item.UnblockedAt.HasValue)
                {
                  <small class="text-muted">(Desbloqueado: @item.UnblockedAt:yyyy-MM-dd HH:mm)</small>
                }
              }
            </td>
            <td>
              @if (item.IsDeleted)
              {
                <span class="text-muted">Sem ações</span>
              }
              else
              {
                <a asp-action="Edit"
                   asp-route-id="@item.Id"
                   class="btn btn-sm btn-outline-primary me-1">
                  <i class="fas fa-edit me-1"></i>Editar
                </a>
                <a asp-action="Details"
                   asp-route-id="@item.Id"
                   class="btn btn-sm btn-outline-info me-1">
                  <i class="fas fa-info-circle me-1"></i>Detalhes
                </a>
                @if (item.IsBlocked)
                {
                  <a asp-action="Unblock"
                     asp-route-id="@item.Id"
                     class="btn btn-sm btn-outline-success me-1">
                    <i class="fas fa-unlock-alt me-1"></i>Desbloquear
                  </a>
                }
                else
                {
                  <a asp-action="Block"
                     asp-route-id="@item.Id"
                     class="btn btn-sm btn-outline-warning me-1">
                    <i class="fas fa-user-lock me-1"></i>Bloquear
                  </a>
                }
                @if (User.IsInRole("Admin"))
                {
                  <a asp-action="Delete"
                     asp-route-id="@item.Id"
                     class="btn btn-sm btn-outline-danger">
                    <i class="fas fa-trash-alt me-1"></i>Remover
                  </a>
                }
              }
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>

@if (!Model.Any())
{
  <div class="alert alert-info mt-3">
    <h4>Nenhum @(isManagerOnly ? "cliente" : "utilizador") encontrado.</h4>
    <p>Ainda não existem @(isManagerOnly ? "clientes" : "utilizadores") no sistema.</p>
  </div>
}

@section Scripts {
  <script>
    @if (User.IsInRole("Admin"))
    {
      <text>
        document.getElementById('showDeleted').addEventListener('change', function() {
          window.location.href = '@Url.Action("Index","User")?includeDeleted=' + this.checked;
        });
      </text>
    }
    // Auto-close alerts
    setTimeout(() => {
      document.querySelectorAll('.alert-success').forEach(a => new bootstrap.Alert(a).close());
    }, 5000);
  </script>
}
